# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cplex_server.models.base_model_ import Model
from cplex_server import util


class BIJobMatrix(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, job_id: int=None, bi_job_matrix: List[int]=None):  # noqa: E501
        """BIJobMatrix - a model defined in Swagger

        :param job_id: The job_id of this BIJobMatrix.  # noqa: E501
        :type job_id: int
        :param bi_job_matrix: The bi_job_matrix of this BIJobMatrix.  # noqa: E501
        :type bi_job_matrix: List[int]
        """
        self.swagger_types = {
            'job_id': int,
            'bi_job_matrix': List[int]
        }

        self.attribute_map = {
            'job_id': 'jobId',
            'bi_job_matrix': 'BIJobMatrix'
        }

        self._job_id = job_id
        self._bi_job_matrix = bi_job_matrix

    @classmethod
    def from_dict(cls, dikt) -> 'BIJobMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BIJobMatrix of this BIJobMatrix.  # noqa: E501
        :rtype: BIJobMatrix
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self) -> int:
        """Gets the job_id of this BIJobMatrix.


        :return: The job_id of this BIJobMatrix.
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: int):
        """Sets the job_id of this BIJobMatrix.


        :param job_id: The job_id of this BIJobMatrix.
        :type job_id: int
        """
        if job_id is None:
            raise ValueError("Invalid value for `job_id`, must not be `None`")  # noqa: E501

        self._job_id = job_id

    @property
    def bi_job_matrix(self) -> List[int]:
        """Gets the bi_job_matrix of this BIJobMatrix.


        :return: The bi_job_matrix of this BIJobMatrix.
        :rtype: List[int]
        """
        return self._bi_job_matrix

    @bi_job_matrix.setter
    def bi_job_matrix(self, bi_job_matrix: List[int]):
        """Sets the bi_job_matrix of this BIJobMatrix.


        :param bi_job_matrix: The bi_job_matrix of this BIJobMatrix.
        :type bi_job_matrix: List[int]
        """
        if bi_job_matrix is None:
            raise ValueError("Invalid value for `bi_job_matrix`, must not be `None`")  # noqa: E501

        self._bi_job_matrix = bi_job_matrix
